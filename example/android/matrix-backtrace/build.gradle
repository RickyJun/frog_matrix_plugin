apply plugin: 'com.android.library'

apply from: rootProject.file('gradle/WeChatNativeDepend.gradle')

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
////    publishNonDefault true
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName rootProject.ext.VERSION_NAME


        externalNativeBuild {
            cmake {
                targets = ['wechatbacktrace', 'unwindstack']
                arguments = ['-DANDROID_STL=c++_shared',
                             "-DEnableLOG=${ENABLE_LOG ? "ON" : "OFF"}" as String,
                             "-DQUT_STATISTIC_ENABLE=${ENABLE_LOG ? "ON" : "OFF"}" as String]
            }
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
            exportHeaders {
                from('src/main/cpp') {
                    include 'common/*.h'
                    moveToDir 'backtrace'
                }
                from('src/main/cpp/libwechatbacktrace/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
                from('src/main/cpp/external/libunwindstack/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
                from('src/main/cpp/dexfile/include') {
                    include '**/*.h'
                    moveToDir 'backtrace'
                }
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            consumerProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            jniDebuggable true
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            java {
                srcDir "src/main/java"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.annotation:annotation:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
//    implementation "com.tencent.stubs:logger:${rootProject.LOGGER_VERSION}"
    implementation group: "com.tencent.matrix", name: "matrix-android-lib", version: MATRIX_VERSION, changing: true
}

version = rootProject.ext.VERSION_NAME
group = rootProject.ext.GROUP

if (rootProject.file('gradle/WeChatPublish.gradle').exists()) {
    if("External" == rootProject.ext.PUBLISH_CHANNEL) {
        apply from: rootProject.file('gradle/android-publish.gradle')
    }
    else {
        apply from: rootProject.file('gradle/WeChatPublish.gradle')
        wechatPublish {
            artifactId = POM_ARTIFACT_ID
        }
    }
}