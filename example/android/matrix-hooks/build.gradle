apply plugin: 'com.android.library'

apply from: rootProject.file('gradle/WeChatNativeDepend.gradle')

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION_FOR_HOOK
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.VERSION_CODE
        versionName rootProject.VERSION_NAME

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        ndk {
            abiFilters rootProject.ABI_FILTERS as String[]
        }

        externalNativeBuild {
            cmake {
                arguments = ["-DEnableLOG=${ENABLE_LOG ? "ON" : "OFF"}" as String]
                cppFlags "-std=gnu++11 -frtti -fexceptions"
            }

            exportHeaders {
                from('src/main/cpp/common') {
                    include '**/*.h'
                    include '*.h'
                }

                from('src/main/cpp/external/fastunwind') {
                    include '**/*.h'
                }
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
//    packagingOptions {
//        //你的报错信息里面给你指明的路径
//        exclude 'lib/arm64-v8a/libc++_shared.so'
//
//    }

}

apply from: project.file('dependencies.gradle')

group = rootProject.GROUP
version = rootProject.VERSION_NAME

if("External" == rootProject.ext.PUBLISH_CHANNEL) {
    apply from: rootProject.file('gradle/android-publish.gradle')
}
else {
    apply from: rootProject.file('gradle/WeChatPublish.gradle')
    wechatPublish {
        artifactId = POM_ARTIFACT_ID
    }
}